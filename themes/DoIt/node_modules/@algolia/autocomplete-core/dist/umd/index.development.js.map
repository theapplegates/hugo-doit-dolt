{"version":3,"file":"index.development.js","sources":["../../../autocomplete-shared/dist/esm/decycle.js","../../../autocomplete-shared/dist/esm/flatten.js","../../../autocomplete-shared/dist/esm/generateAutocompleteId.js","../../../autocomplete-shared/dist/esm/getItemsCount.js","../../../autocomplete-shared/dist/esm/invariant.js","../../../autocomplete-shared/dist/esm/noop.js","../../../autocomplete-shared/dist/esm/version.js","../../../autocomplete-shared/dist/esm/userAgents.js","../../../autocomplete-shared/dist/esm/warn.js","../../src/checkOptions.ts","../../src/createStore.ts","../../src/getAutocompleteSetters.ts","../../src/utils/createConcurrentSafePromise.ts","../../src/utils/getNextActiveItemId.ts","../../src/utils/getNormalizedSources.ts","../../src/utils/getActiveItem.ts","../../src/utils/isOrContainsNode.ts","../../src/utils/mapToAlgoliaResponse.ts","../../src/getDefaultProps.ts","../../src/reshape.ts","../../src/resolve.ts","../../src/onInput.ts","../../src/onKeyDown.ts","../../src/getPropGetters.ts","../../src/metadata.ts","../../src/getCompletion.ts","../../src/stateReducer.ts","../../src/createAutocomplete.ts"],"sourcesContent":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Decycles objects with circular references.\n * This is used to print cyclic structures in development environment only.\n */\nexport function decycle(obj) {\n  var seen = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Set();\n\n  if (!(process.env.NODE_ENV !== 'production') || !obj || _typeof(obj) !== 'object') {\n    return obj;\n  }\n\n  if (seen.has(obj)) {\n    return '[Circular]';\n  }\n\n  var newSeen = seen.add(obj);\n\n  if (Array.isArray(obj)) {\n    return obj.map(function (x) {\n      return decycle(x, newSeen);\n    });\n  }\n\n  return Object.fromEntries(Object.entries(obj).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    return [key, decycle(value, newSeen)];\n  }));\n}","export function flatten(values) {\n  return values.reduce(function (a, b) {\n    return a.concat(b);\n  }, []);\n}","var autocompleteId = 0;\nexport function generateAutocompleteId() {\n  return \"autocomplete-\".concat(autocompleteId++);\n}","export function getItemsCount(state) {\n  if (state.collections.length === 0) {\n    return 0;\n  }\n\n  return state.collections.reduce(function (sum, collection) {\n    return sum + collection.items.length;\n  }, 0);\n}","/**\n * Throws an error if the condition is not met in development mode.\n * This is used to make development a better experience to provide guidance as\n * to where the error comes from.\n */\nexport function invariant(condition, message) {\n  if (!(process.env.NODE_ENV !== 'production')) {\n    return;\n  }\n\n  if (!condition) {\n    throw new Error(\"[Autocomplete] \".concat(typeof message === 'function' ? message() : message));\n  }\n}","export var noop = function noop() {};","export var version = '1.5.1';","import { version } from './version';\nexport var userAgents = [{\n  segment: 'autocomplete-core',\n  version: version\n}];","export var warnCache = {\n  current: {}\n};\n/**\n * Logs a warning if the condition is not met.\n * This is used to log issues in development environment only.\n */\n\nexport function warn(condition, message) {\n  if (!(process.env.NODE_ENV !== 'production')) {\n    return;\n  }\n\n  if (condition) {\n    return;\n  }\n\n  var sanitizedMessage = message.trim();\n  var hasAlreadyPrinted = warnCache.current[sanitizedMessage];\n\n  if (!hasAlreadyPrinted) {\n    warnCache.current[sanitizedMessage] = true; // eslint-disable-next-line no-console\n\n    console.warn(\"[Autocomplete] \".concat(sanitizedMessage));\n  }\n}","import { warn } from '@algolia/autocomplete-shared';\n\nimport { AutocompleteOptions, BaseItem } from './types';\n\nexport function checkOptions<TItem extends BaseItem>(\n  options: AutocompleteOptions<TItem>\n) {\n  warn(\n    !options.debug,\n    'The `debug` option is meant for development debugging and should not be used in production.'\n  );\n}\n","import {\n  AutocompleteState,\n  AutocompleteStore,\n  BaseItem,\n  InternalAutocompleteOptions,\n  Reducer,\n} from './types';\n\ntype OnStoreStateChange<TItem extends BaseItem> = ({\n  prevState,\n  state,\n}: {\n  prevState: AutocompleteState<TItem>;\n  state: AutocompleteState<TItem>;\n}) => void;\n\nexport function createStore<TItem extends BaseItem>(\n  reducer: Reducer,\n  props: InternalAutocompleteOptions<TItem>,\n  onStoreStateChange: OnStoreStateChange<TItem>\n): AutocompleteStore<TItem> {\n  let state = props.initialState;\n\n  return {\n    getState() {\n      return state;\n    },\n    dispatch(action, payload) {\n      const prevState = { ...state };\n      state = reducer(state, {\n        type: action,\n        props,\n        payload,\n      });\n\n      onStoreStateChange({ state, prevState });\n    },\n    shouldSkipPendingUpdate: false,\n  };\n}\n","import { flatten } from '@algolia/autocomplete-shared';\n\nimport {\n  AutocompleteApi,\n  AutocompleteCollection,\n  AutocompleteStore,\n  BaseItem,\n} from './types';\n\ninterface GetAutocompleteSettersOptions<TItem extends BaseItem> {\n  store: AutocompleteStore<TItem>;\n}\n\nexport function getAutocompleteSetters<TItem extends BaseItem>({\n  store,\n}: GetAutocompleteSettersOptions<TItem>) {\n  const setActiveItemId: AutocompleteApi<TItem>['setActiveItemId'] = (\n    value\n  ) => {\n    store.dispatch('setActiveItemId', value);\n  };\n\n  const setQuery: AutocompleteApi<TItem>['setQuery'] = (value) => {\n    store.dispatch('setQuery', value);\n  };\n\n  const setCollections: AutocompleteApi<TItem>['setCollections'] = (\n    rawValue\n  ) => {\n    let baseItemId = 0;\n    const value = rawValue.map<AutocompleteCollection<TItem>>((collection) => ({\n      ...collection,\n      // We flatten the stored items to support calling `getAlgoliaResults`\n      // from the source itself.\n      items: flatten(collection.items as any).map((item: any) => ({\n        ...item,\n        __autocomplete_id: baseItemId++,\n      })),\n    }));\n\n    store.dispatch('setCollections', value);\n  };\n\n  const setIsOpen: AutocompleteApi<TItem>['setIsOpen'] = (value) => {\n    store.dispatch('setIsOpen', value);\n  };\n\n  const setStatus: AutocompleteApi<TItem>['setStatus'] = (value) => {\n    store.dispatch('setStatus', value);\n  };\n\n  const setContext: AutocompleteApi<TItem>['setContext'] = (value) => {\n    store.dispatch('setContext', value);\n  };\n\n  return {\n    setActiveItemId,\n    setQuery,\n    setCollections,\n    setIsOpen,\n    setStatus,\n    setContext,\n  };\n}\n","import { MaybePromise } from '@algolia/autocomplete-shared';\n\n/**\n * Creates a runner that executes promises in a concurrent-safe way.\n *\n * This is useful to prevent older promises to resolve after a newer promise,\n * otherwise resulting in stale resolved values.\n */\nexport function createConcurrentSafePromise() {\n  let basePromiseId = -1;\n  let latestResolvedId = -1;\n  let latestResolvedValue: unknown = undefined;\n  let runningPromisesCount = 0;\n\n  function runConcurrentSafePromise<TValue>(promise: MaybePromise<TValue>) {\n    basePromiseId++;\n    runningPromisesCount++;\n    const currentPromiseId = basePromiseId;\n\n    return Promise.resolve(promise)\n      .then((x) => {\n        // The promise might take too long to resolve and get outdated. This would\n        // result in resolving stale values.\n        // When this happens, we ignore the promise value and return the one\n        // coming from the latest resolved value.\n        //\n        // +----------------------------------+\n        // |        100ms                     |\n        // | run(1) +--->  R1                 |\n        // |        300ms                     |\n        // | run(2) +-------------> R2 (SKIP) |\n        // |        200ms                     |\n        // | run(3) +--------> R3             |\n        // +----------------------------------+\n        if (latestResolvedValue && currentPromiseId < latestResolvedId) {\n          return latestResolvedValue as TValue;\n        }\n\n        latestResolvedId = currentPromiseId;\n        latestResolvedValue = x;\n\n        return x;\n      })\n      .finally(() => runningPromisesCount--);\n  }\n\n  runConcurrentSafePromise.isRunning = () => runningPromisesCount > 0;\n\n  return runConcurrentSafePromise;\n}\n","/**\n * Returns the next active item ID from the current state.\n *\n * We allow circular keyboard navigation from the base index.\n * The base index can either be `null` (nothing is highlighted) or `0`\n * (the first item is highlighted).\n * The base index is allowed to get assigned `null` only if\n * `props.defaultActiveItemId` is `null`. This pattern allows to \"stop\"\n * by the actual query before navigating to other suggestions as seen on\n * Google or Amazon.\n *\n * @param moveAmount The offset to increment (or decrement) the last index\n * @param baseIndex The current index to compute the next index from\n * @param itemCount The number of items\n * @param defaultActiveItemId The default active index to fallback to\n */\nexport function getNextActiveItemId(\n  moveAmount: number,\n  baseIndex: number | null,\n  itemCount: number,\n  defaultActiveItemId: number | null\n): number | null {\n  if (!itemCount) {\n    return null;\n  }\n\n  if (\n    moveAmount < 0 &&\n    (baseIndex === null || (defaultActiveItemId !== null && baseIndex === 0))\n  ) {\n    return itemCount + moveAmount;\n  }\n\n  const numericIndex = (baseIndex === null ? -1 : baseIndex) + moveAmount;\n\n  if (numericIndex <= -1 || numericIndex >= itemCount) {\n    return defaultActiveItemId === null ? null : 0;\n  }\n\n  return numericIndex;\n}\n","import { invariant, decycle, noop } from '@algolia/autocomplete-shared';\n\nimport {\n  AutocompleteSource,\n  BaseItem,\n  GetSources,\n  GetSourcesParams,\n  InternalAutocompleteSource,\n  InternalGetSources,\n} from '../types';\n\nexport function getNormalizedSources<TItem extends BaseItem>(\n  getSources: GetSources<TItem>,\n  params: GetSourcesParams<TItem>\n): ReturnType<InternalGetSources<TItem>> {\n  const seenSourceIds: string[] = [];\n\n  return Promise.resolve(getSources(params)).then((sources) => {\n    invariant(\n      Array.isArray(sources),\n      () =>\n        `The \\`getSources\\` function must return an array of sources but returned type ${JSON.stringify(\n          typeof sources\n        )}:\\n\\n${JSON.stringify(decycle(sources), null, 2)}`\n    );\n\n    return Promise.all(\n      sources\n        // We allow `undefined` and `false` sources to allow users to use\n        // `Boolean(query) && source` (=> `false`).\n        // We need to remove these values at this point.\n        .filter((maybeSource: any): maybeSource is AutocompleteSource<TItem> =>\n          Boolean(maybeSource)\n        )\n        .map((source) => {\n          invariant(\n            typeof source.sourceId === 'string',\n            'A source must provide a `sourceId` string.'\n          );\n\n          if (seenSourceIds.includes(source.sourceId)) {\n            throw new Error(\n              `[Autocomplete] The \\`sourceId\\` ${JSON.stringify(\n                source.sourceId\n              )} is not unique.`\n            );\n          }\n\n          seenSourceIds.push(source.sourceId);\n\n          const normalizedSource: InternalAutocompleteSource<TItem> = {\n            getItemInputValue({ state }) {\n              return state.query;\n            },\n            getItemUrl() {\n              return undefined;\n            },\n            onSelect({ setIsOpen }) {\n              setIsOpen(false);\n            },\n            onActive: noop,\n            ...source,\n          };\n\n          return Promise.resolve(normalizedSource);\n        })\n    );\n  });\n}\n","import { AutocompleteCollection, AutocompleteState, BaseItem } from '../types';\n\n// We don't have access to the autocomplete source when we call `onKeyDown`\n// or `onClick` because those are native browser events.\n// However, we can get the source from the suggestion index.\nfunction getCollectionFromActiveItemId<TItem extends BaseItem>(\n  state: AutocompleteState<TItem>\n): AutocompleteCollection<TItem> | undefined {\n  // Given 3 sources with respectively 1, 2 and 3 suggestions: [1, 2, 3]\n  // We want to get the accumulated counts:\n  // [1, 1 + 2, 1 + 2 + 3] = [1, 3, 3 + 3] = [1, 3, 6]\n  const accumulatedCollectionsCount = state.collections\n    .map((collections) => collections.items.length)\n    .reduce<number[]>((acc, collectionsCount, index) => {\n      const previousValue = acc[index - 1] || 0;\n      const nextValue = previousValue + collectionsCount;\n\n      acc.push(nextValue);\n\n      return acc;\n    }, []);\n\n  // Based on the accumulated counts, we can infer the index of the suggestion.\n  const collectionIndex = accumulatedCollectionsCount.reduce((acc, current) => {\n    if (current <= state.activeItemId!) {\n      return acc + 1;\n    }\n\n    return acc;\n  }, 0);\n\n  return state.collections[collectionIndex];\n}\n\n/**\n * Gets the highlighted index relative to a suggestion object (not the absolute\n * highlighted index).\n *\n * Example:\n *  [['a', 'b'], ['c', 'd', 'e'], ['f']]\n *                      ↑\n *         (absolute: 3, relative: 1)\n */\nfunction getRelativeActiveItemId<TItem extends BaseItem>({\n  state,\n  collection,\n}: {\n  state: AutocompleteState<TItem>;\n  collection: AutocompleteCollection<TItem>;\n}): number {\n  let isOffsetFound = false;\n  let counter = 0;\n  let previousItemsOffset = 0;\n\n  while (isOffsetFound === false) {\n    const currentCollection = state.collections[counter];\n\n    if (currentCollection === collection) {\n      isOffsetFound = true;\n      break;\n    }\n\n    previousItemsOffset += currentCollection.items.length;\n\n    counter++;\n  }\n\n  return state.activeItemId! - previousItemsOffset;\n}\n\nexport function getActiveItem<TItem extends BaseItem>(\n  state: AutocompleteState<TItem>\n) {\n  const collection = getCollectionFromActiveItemId(state);\n\n  if (!collection) {\n    return null;\n  }\n\n  const item = collection.items[getRelativeActiveItemId({ state, collection })];\n  const source = collection.source;\n  const itemInputValue = source.getItemInputValue({ item, state });\n  const itemUrl = source.getItemUrl({ item, state });\n\n  return {\n    item,\n    itemInputValue,\n    itemUrl,\n    source,\n  };\n}\n","export function isOrContainsNode(parent: Node, child: Node) {\n  return parent === child || parent.contains(child);\n}\n","import type {\n  SearchForFacetValuesResponse,\n  SearchResponse,\n} from '@algolia/client-search';\n\nexport function mapToAlgoliaResponse<THit>(\n  rawResults: Array<SearchResponse<THit> | SearchForFacetValuesResponse>\n) {\n  const results: Array<\n    SearchResponse<THit> | SearchForFacetValuesResponse\n  > = rawResults.map((result) => {\n    return {\n      ...result,\n      hits: (result as SearchResponse<THit>).hits?.map((hit) => {\n        // Bring support for the Insights plugin.\n        return {\n          ...hit,\n          __autocomplete_indexName: (result as SearchResponse<THit>).index,\n          __autocomplete_queryID: (result as SearchResponse<THit>).queryID,\n        };\n      }),\n    };\n  });\n\n  return {\n    results,\n    hits: results\n      .map((result) => (result as SearchResponse<THit>).hits)\n      .filter(Boolean),\n    facetHits: results\n      .map((result) =>\n        (result as SearchForFacetValuesResponse).facetHits?.map((facetHit) => {\n          // Bring support for the highlighting components.\n          return {\n            label: facetHit.value,\n            count: facetHit.count,\n            _highlightResult: {\n              label: {\n                value: facetHit.highlighted,\n              },\n            },\n          };\n        })\n      )\n      .filter(Boolean),\n  };\n}\n","import {\n  getItemsCount,\n  generateAutocompleteId,\n  flatten,\n} from '@algolia/autocomplete-shared';\n\nimport {\n  AutocompleteEnvironment,\n  AutocompleteOptions,\n  AutocompleteSubscribers,\n  BaseItem,\n  InternalAutocompleteOptions,\n} from './types';\nimport { getNormalizedSources } from './utils';\n\nexport function getDefaultProps<TItem extends BaseItem>(\n  props: AutocompleteOptions<TItem>,\n  pluginSubscribers: AutocompleteSubscribers<TItem>\n): InternalAutocompleteOptions<TItem> {\n  /* eslint-disable no-restricted-globals */\n  const environment: AutocompleteEnvironment = (typeof window !== 'undefined'\n    ? window\n    : {}) as typeof window;\n  /* eslint-enable no-restricted-globals */\n  const plugins = props.plugins || [];\n\n  return {\n    debug: false,\n    openOnFocus: false,\n    placeholder: '',\n    autoFocus: false,\n    defaultActiveItemId: null,\n    stallThreshold: 300,\n    environment,\n    shouldPanelOpen: ({ state }) => getItemsCount(state) > 0,\n    reshape: ({ sources }) => sources,\n    ...props,\n    // Since `generateAutocompleteId` triggers a side effect (it increments\n    // an internal counter), we don't want to execute it if unnecessary.\n    id: props.id ?? generateAutocompleteId(),\n    plugins,\n    // The following props need to be deeply defaulted.\n    initialState: {\n      activeItemId: null,\n      query: '',\n      completion: null,\n      collections: [],\n      isOpen: false,\n      status: 'idle',\n      context: {},\n      ...props.initialState,\n    },\n    onStateChange(params) {\n      props.onStateChange?.(params);\n      plugins.forEach((x) => x.onStateChange?.(params));\n    },\n    onSubmit(params) {\n      props.onSubmit?.(params);\n      plugins.forEach((x) => x.onSubmit?.(params));\n    },\n    onReset(params) {\n      props.onReset?.(params);\n      plugins.forEach((x) => x.onReset?.(params));\n    },\n    getSources(params) {\n      return Promise.all(\n        [...plugins.map((plugin) => plugin.getSources), props.getSources]\n          .filter(Boolean)\n          .map((getSources) => getNormalizedSources(getSources!, params))\n      )\n        .then((nested) => flatten(nested))\n        .then((sources) =>\n          sources.map((source) => ({\n            ...source,\n            onSelect(params) {\n              source.onSelect(params);\n              pluginSubscribers.forEach((x) => x.onSelect?.(params));\n            },\n            onActive(params) {\n              source.onActive(params);\n              pluginSubscribers.forEach((x) => x.onActive?.(params));\n            },\n          }))\n        );\n    },\n    navigator: {\n      navigate({ itemUrl }) {\n        environment.location.assign(itemUrl);\n      },\n      navigateNewTab({ itemUrl }) {\n        const windowReference = environment.open(itemUrl, '_blank', 'noopener');\n        windowReference?.focus();\n      },\n      navigateNewWindow({ itemUrl }) {\n        environment.open(itemUrl, '_blank', 'noopener');\n      },\n      ...props.navigator,\n    },\n  };\n}\n","import { flatten } from '@algolia/autocomplete-shared';\n\nimport {\n  AutocompleteCollection,\n  AutocompleteReshapeSourcesBySourceId,\n  AutocompleteState,\n  BaseItem,\n  InternalAutocompleteOptions,\n} from './types';\n\ntype ReshapeParams<TItem extends BaseItem> = {\n  collections: Array<AutocompleteCollection<any>>;\n  props: InternalAutocompleteOptions<TItem>;\n  state: AutocompleteState<TItem>;\n};\n\nexport function reshape<TItem extends BaseItem>({\n  collections,\n  props,\n  state,\n}: ReshapeParams<TItem>) {\n  // Sources are grouped by `sourceId` to conveniently pick them via destructuring.\n  // Example: `const { recentSearchesPlugin } = sourcesBySourceId`\n  const sourcesBySourceId = collections.reduce<\n    AutocompleteReshapeSourcesBySourceId<TItem>\n  >(\n    (acc, collection) => ({\n      ...acc,\n      [collection.source.sourceId]: {\n        ...collection.source,\n        getItems() {\n          // We provide the resolved items from the collection to the `reshape` prop.\n          return flatten<any>(collection.items);\n        },\n      },\n    }),\n    {}\n  );\n\n  const reshapeSources = props.reshape({\n    sources: Object.values(sourcesBySourceId),\n    sourcesBySourceId,\n    state,\n  });\n\n  // We reconstruct the collections with the items modified by the `reshape` prop.\n  return flatten(reshapeSources)\n    .filter(Boolean)\n    .map((source) => {\n      return {\n        source,\n        items: source.getItems(),\n      };\n    });\n}\n","import type {\n  Execute,\n  ExecuteResponse,\n  RequesterDescription,\n  TransformResponse,\n} from '@algolia/autocomplete-preset-algolia';\nimport { decycle, flatten, invariant } from '@algolia/autocomplete-shared';\nimport {\n  MultipleQueriesQuery,\n  SearchForFacetValuesResponse,\n  SearchResponse,\n} from '@algolia/client-search';\nimport type { SearchClient } from 'algoliasearch/lite';\n\nimport { BaseItem, InternalAutocompleteSource } from './types';\nimport { mapToAlgoliaResponse } from './utils';\n\nfunction isDescription<TItem extends BaseItem>(\n  item:\n    | RequestDescriptionPreResolved<TItem>\n    | RequestDescriptionPreResolvedCustom<TItem>\n    | PackedDescription<TItem>\n): item is RequestDescriptionPreResolved<TItem> {\n  return Boolean((item as RequestDescriptionPreResolved<TItem>).execute);\n}\n\nfunction isRequesterDescription<TItem extends BaseItem>(\n  description: TItem[] | TItem[][] | RequesterDescription<TItem>\n): description is RequesterDescription<TItem> {\n  return Boolean((description as RequesterDescription<TItem>)?.execute);\n}\n\ntype PackedDescription<TItem extends BaseItem> = {\n  searchClient: SearchClient;\n  execute: Execute<TItem>;\n  items: RequestDescriptionPreResolved<TItem>['requests'];\n};\n\ntype RequestDescriptionPreResolved<TItem extends BaseItem> = Pick<\n  RequesterDescription<TItem>,\n  'execute' | 'searchClient' | 'transformResponse'\n> & {\n  requests: Array<{\n    query: MultipleQueriesQuery;\n    sourceId: string;\n    transformResponse: TransformResponse<TItem>;\n  }>;\n};\n\ntype RequestDescriptionPreResolvedCustom<TItem extends BaseItem> = {\n  items: TItem[] | TItem[][];\n  sourceId: string;\n  transformResponse?: undefined;\n};\n\nexport function preResolve<TItem extends BaseItem>(\n  itemsOrDescription: TItem[] | TItem[][] | RequesterDescription<TItem>,\n  sourceId: string\n):\n  | RequestDescriptionPreResolved<TItem>\n  | RequestDescriptionPreResolvedCustom<TItem> {\n  if (isRequesterDescription<TItem>(itemsOrDescription)) {\n    return {\n      ...itemsOrDescription,\n      requests: itemsOrDescription.queries.map((query) => ({\n        query,\n        sourceId,\n        transformResponse: itemsOrDescription.transformResponse,\n      })),\n    };\n  }\n\n  return {\n    items: itemsOrDescription,\n    sourceId,\n  };\n}\n\nexport function resolve<TItem extends BaseItem>(\n  items: Array<\n    | RequestDescriptionPreResolved<TItem>\n    | RequestDescriptionPreResolvedCustom<TItem>\n  >\n) {\n  const packed = items.reduce<\n    Array<RequestDescriptionPreResolvedCustom<TItem> | PackedDescription<TItem>>\n  >((acc, current) => {\n    if (!isDescription(current)) {\n      acc.push(current);\n      return acc;\n    }\n\n    const { searchClient, execute, requests } = current;\n\n    const container = acc.find<PackedDescription<TItem>>(\n      (item): item is PackedDescription<TItem> => {\n        return (\n          isDescription(current) &&\n          isDescription(item) &&\n          item.searchClient === searchClient &&\n          item.execute === execute\n        );\n      }\n    );\n\n    if (container) {\n      container.items.push(...requests);\n    } else {\n      const request: PackedDescription<TItem> = {\n        execute,\n        items: requests,\n        searchClient,\n      };\n      acc.push(request);\n    }\n\n    return acc;\n  }, []);\n\n  const values = packed.map<\n    | Promise<RequestDescriptionPreResolvedCustom<TItem>>\n    | ReturnType<Execute<TItem>>\n  >((maybeDescription) => {\n    if (!isDescription<TItem>(maybeDescription)) {\n      return Promise.resolve(\n        maybeDescription as RequestDescriptionPreResolvedCustom<TItem>\n      );\n    }\n\n    const {\n      execute,\n      items,\n      searchClient,\n    } = maybeDescription as PackedDescription<TItem>;\n\n    return execute({\n      searchClient,\n      requests: items,\n    });\n  });\n\n  return Promise.all<\n    RequestDescriptionPreResolvedCustom<TItem> | ExecuteResponse<TItem>\n  >(values).then((responses) =>\n    flatten<\n      RequestDescriptionPreResolvedCustom<TItem> | ExecuteResponse<TItem>[0]\n    >(responses)\n  );\n}\n\nexport function postResolve<TItem extends BaseItem>(\n  responses: Array<\n    RequestDescriptionPreResolvedCustom<TItem> | ExecuteResponse<TItem>[0]\n  >,\n  sources: Array<InternalAutocompleteSource<TItem>>\n) {\n  return sources.map((source) => {\n    const matches = responses.filter(\n      (response) => response.sourceId === source.sourceId\n    );\n    const results = matches.map(({ items }) => items);\n    const transform = matches[0].transformResponse;\n    const items = transform\n      ? transform(\n          mapToAlgoliaResponse(\n            results as Array<\n              SearchForFacetValuesResponse | SearchResponse<TItem>\n            >\n          )\n        )\n      : results;\n\n    invariant(\n      Array.isArray(items),\n      () => `The \\`getItems\\` function from source \"${\n        source.sourceId\n      }\" must return an array of items but returned type ${JSON.stringify(\n        typeof items\n      )}:\\n\\n${JSON.stringify(decycle(items), null, 2)}.\n\nSee: https://www.algolia.com/doc/ui-libraries/autocomplete/core-concepts/sources/#param-getitems`\n    );\n\n    invariant(\n      (items as Array<typeof items>).every(Boolean),\n      `The \\`getItems\\` function from source \"${\n        source.sourceId\n      }\" must return an array of items but returned ${JSON.stringify(\n        undefined\n      )}.\n\nDid you forget to return items?\n\nSee: https://www.algolia.com/doc/ui-libraries/autocomplete/core-concepts/sources/#param-getitems`\n    );\n\n    return {\n      source,\n      items,\n    };\n  });\n}\n","import { reshape } from './reshape';\nimport { preResolve, resolve, postResolve } from './resolve';\nimport {\n  AutocompleteScopeApi,\n  AutocompleteState,\n  AutocompleteStore,\n  BaseItem,\n  InternalAutocompleteOptions,\n} from './types';\nimport { createConcurrentSafePromise, getActiveItem } from './utils';\n\nlet lastStalledId: number | null = null;\n\ninterface OnInputParams<TItem extends BaseItem>\n  extends AutocompleteScopeApi<TItem> {\n  event: any;\n  /**\n   * The next partial state to apply after the function is called.\n   *\n   * This is useful when we call `onInput` in a different scenario than an\n   * actual input. For example, we use `onInput` when we click on an item,\n   * but we want to close the panel in that case.\n   */\n  nextState?: Partial<AutocompleteState<TItem>>;\n  props: InternalAutocompleteOptions<TItem>;\n  query: string;\n  store: AutocompleteStore<TItem>;\n}\n\nconst runConcurrentSafePromise = createConcurrentSafePromise();\n\nexport function onInput<TItem extends BaseItem>({\n  event,\n  nextState = {},\n  props,\n  query,\n  refresh,\n  store,\n  ...setters\n}: OnInputParams<TItem>): Promise<void> {\n  if (lastStalledId) {\n    props.environment.clearTimeout(lastStalledId);\n  }\n\n  const {\n    setCollections,\n    setIsOpen,\n    setQuery,\n    setActiveItemId,\n    setStatus,\n  } = setters;\n\n  setQuery(query);\n  setActiveItemId(props.defaultActiveItemId);\n\n  if (!query && props.openOnFocus === false) {\n    const collections = store.getState().collections.map((collection) => ({\n      ...collection,\n      items: [],\n    }));\n\n    setStatus('idle');\n    setCollections(collections);\n    setIsOpen(\n      nextState.isOpen ?? props.shouldPanelOpen({ state: store.getState() })\n    );\n\n    // We make sure to update the latest resolved value of the tracked\n    // promises to keep late resolving promises from \"cancelling\" the state\n    // updates performed in this code path.\n    // We chain with a void promise to respect `onInput`'s expected return type.\n    return runConcurrentSafePromise(collections).then(() => Promise.resolve());\n  }\n\n  setStatus('loading');\n\n  lastStalledId = props.environment.setTimeout(() => {\n    setStatus('stalled');\n  }, props.stallThreshold);\n\n  // We track the entire promise chain triggered by `onInput` before mutating\n  // the Autocomplete state to make sure that any state manipulation is based on\n  // fresh data regardless of when promises individually resolve.\n  // We don't track nested promises and only rely on the full chain resolution,\n  // meaning we should only ever manipulate the state once this concurrent-safe\n  // promise is resolved.\n  return runConcurrentSafePromise(\n    props\n      .getSources({\n        query,\n        refresh,\n        state: store.getState(),\n        ...setters,\n      })\n      .then((sources) => {\n        return Promise.all(\n          sources.map((source) => {\n            return Promise.resolve(\n              source.getItems({\n                query,\n                refresh,\n                state: store.getState(),\n                ...setters,\n              })\n            ).then((itemsOrDescription) =>\n              preResolve<TItem>(itemsOrDescription, source.sourceId)\n            );\n          })\n        )\n          .then(resolve)\n          .then((responses) => postResolve(responses, sources))\n          .then((collections) =>\n            reshape({ collections, props, state: store.getState() })\n          );\n      })\n  )\n    .then((collections) => {\n      // Parameters passed to `onInput` could be stale when the following code\n      // executes, because `onInput` calls may not resolve in order.\n      // If it becomes a problem we'll need to save the last passed parameters.\n      // See: https://codesandbox.io/s/agitated-cookies-y290z\n\n      setStatus('idle');\n\n      if (store.shouldSkipPendingUpdate) {\n        if (!runConcurrentSafePromise.isRunning()) {\n          store.shouldSkipPendingUpdate = false;\n        }\n\n        return;\n      }\n\n      setCollections(collections as any);\n\n      const isPanelOpen = props.shouldPanelOpen({ state: store.getState() });\n\n      setIsOpen(\n        nextState.isOpen ??\n          ((props.openOnFocus && !query && isPanelOpen) || isPanelOpen)\n      );\n\n      const highlightedItem = getActiveItem(store.getState());\n\n      if (store.getState().activeItemId !== null && highlightedItem) {\n        const { item, itemInputValue, itemUrl, source } = highlightedItem;\n\n        source.onActive({\n          event,\n          item,\n          itemInputValue,\n          itemUrl,\n          refresh,\n          source,\n          state: store.getState(),\n          ...setters,\n        });\n      }\n    })\n    .finally(() => {\n      if (lastStalledId) {\n        props.environment.clearTimeout(lastStalledId);\n      }\n    });\n}\n\nonInput.isRunning = runConcurrentSafePromise.isRunning;\n","import { onInput } from './onInput';\nimport {\n  ActionType,\n  AutocompleteScopeApi,\n  AutocompleteStore,\n  BaseItem,\n  InternalAutocompleteOptions,\n} from './types';\nimport { getActiveItem } from './utils';\n\ninterface OnKeyDownOptions<TItem extends BaseItem>\n  extends AutocompleteScopeApi<TItem> {\n  event: KeyboardEvent;\n  props: InternalAutocompleteOptions<TItem>;\n  store: AutocompleteStore<TItem>;\n}\n\nexport function onKeyDown<TItem extends BaseItem>({\n  event,\n  props,\n  refresh,\n  store,\n  ...setters\n}: OnKeyDownOptions<TItem>): void {\n  if (event.key === 'ArrowUp' || event.key === 'ArrowDown') {\n    // eslint-disable-next-line no-inner-declarations\n    function triggerScrollIntoView() {\n      const nodeItem = props.environment.document.getElementById(\n        `${props.id}-item-${store.getState().activeItemId}`\n      );\n\n      if (nodeItem) {\n        if ((nodeItem as any).scrollIntoViewIfNeeded) {\n          (nodeItem as any).scrollIntoViewIfNeeded(false);\n        } else {\n          nodeItem.scrollIntoView(false);\n        }\n      }\n    }\n\n    // eslint-disable-next-line no-inner-declarations\n    function triggerOnActive() {\n      const highlightedItem = getActiveItem(store.getState());\n\n      if (store.getState().activeItemId !== null && highlightedItem) {\n        const { item, itemInputValue, itemUrl, source } = highlightedItem;\n\n        source.onActive({\n          event,\n          item,\n          itemInputValue,\n          itemUrl,\n          refresh,\n          source,\n          state: store.getState(),\n          ...setters,\n        });\n      }\n    }\n\n    // Default browser behavior changes the caret placement on ArrowUp and\n    // ArrowDown.\n    event.preventDefault();\n\n    // When re-opening the panel, we need to split the logic to keep the actions\n    // synchronized as `onInput` returns a promise.\n    if (\n      store.getState().isOpen === false &&\n      (props.openOnFocus || Boolean(store.getState().query))\n    ) {\n      onInput({\n        event,\n        props,\n        query: store.getState().query,\n        refresh,\n        store,\n        ...setters,\n      }).then(() => {\n        store.dispatch(event.key as ActionType, {\n          nextActiveItemId: props.defaultActiveItemId,\n        });\n\n        triggerOnActive();\n        // Since we rely on the DOM, we need to wait for all the micro tasks to\n        // finish (which include re-opening the panel) to make sure all the\n        // elements are available.\n        setTimeout(triggerScrollIntoView, 0);\n      });\n    } else {\n      store.dispatch(event.key, {});\n\n      triggerOnActive();\n      triggerScrollIntoView();\n    }\n  } else if (event.key === 'Escape') {\n    // This prevents the default browser behavior on `input[type=\"search\"]`\n    // from removing the query right away because we first want to close the\n    // panel.\n    event.preventDefault();\n\n    store.dispatch(event.key, null);\n\n    // Hitting the `Escape` key signals the end of a user interaction with the\n    // autocomplete. At this point, we should ignore any requests that are still\n    // running and could reopen the panel once they resolve, because that would\n    // result in an unsolicited UI behavior.\n    if (onInput.isRunning()) {\n      store.shouldSkipPendingUpdate = true;\n    }\n  } else if (event.key === 'Enter') {\n    // No active item, so we let the browser handle the native `onSubmit` form\n    // event.\n    if (\n      store.getState().activeItemId === null ||\n      store\n        .getState()\n        .collections.every((collection) => collection.items.length === 0)\n    ) {\n      return;\n    }\n\n    // This prevents the `onSubmit` event to be sent because an item is\n    // highlighted.\n    event.preventDefault();\n\n    const { item, itemInputValue, itemUrl, source } = getActiveItem(\n      store.getState()\n    )!;\n\n    if (event.metaKey || event.ctrlKey) {\n      if (itemUrl !== undefined) {\n        source.onSelect({\n          event,\n          item,\n          itemInputValue,\n          itemUrl,\n          refresh,\n          source,\n          state: store.getState(),\n          ...setters,\n        });\n        props.navigator.navigateNewTab({\n          itemUrl,\n          item,\n          state: store.getState(),\n        });\n      }\n    } else if (event.shiftKey) {\n      if (itemUrl !== undefined) {\n        source.onSelect({\n          event,\n          item,\n          itemInputValue,\n          itemUrl,\n          refresh,\n          source,\n          state: store.getState(),\n          ...setters,\n        });\n        props.navigator.navigateNewWindow({\n          itemUrl,\n          item,\n          state: store.getState(),\n        });\n      }\n    } else if (event.altKey) {\n      // Keep native browser behavior\n    } else {\n      if (itemUrl !== undefined) {\n        source.onSelect({\n          event,\n          item,\n          itemInputValue,\n          itemUrl,\n          refresh,\n          source,\n          state: store.getState(),\n          ...setters,\n        });\n        props.navigator.navigate({\n          itemUrl,\n          item,\n          state: store.getState(),\n        });\n\n        return;\n      }\n\n      onInput({\n        event,\n        nextState: { isOpen: false },\n        props,\n        query: itemInputValue,\n        refresh,\n        store,\n        ...setters,\n      }).then(() => {\n        source.onSelect({\n          event,\n          item,\n          itemInputValue,\n          itemUrl,\n          refresh,\n          source,\n          state: store.getState(),\n          ...setters,\n        });\n      });\n    }\n  }\n}\n","import { onInput } from './onInput';\nimport { onKeyDown } from './onKeyDown';\nimport {\n  AutocompleteScopeApi,\n  AutocompleteStore,\n  BaseItem,\n  GetEnvironmentProps,\n  GetFormProps,\n  GetInputProps,\n  GetItemProps,\n  GetLabelProps,\n  GetListProps,\n  GetPanelProps,\n  GetRootProps,\n  InternalAutocompleteOptions,\n} from './types';\nimport { getActiveItem, isOrContainsNode } from './utils';\n\ninterface GetPropGettersOptions<TItem extends BaseItem>\n  extends AutocompleteScopeApi<TItem> {\n  store: AutocompleteStore<TItem>;\n  props: InternalAutocompleteOptions<TItem>;\n}\n\nexport function getPropGetters<\n  TItem extends BaseItem,\n  TEvent,\n  TMouseEvent,\n  TKeyboardEvent\n>({ props, refresh, store, ...setters }: GetPropGettersOptions<TItem>) {\n  const getEnvironmentProps: GetEnvironmentProps = (providedProps) => {\n    const { inputElement, formElement, panelElement, ...rest } = providedProps;\n\n    return {\n      // On touch devices, we do not rely on the native `blur` event of the\n      // input to close the panel, but rather on a custom `touchstart` event\n      // outside of the autocomplete elements.\n      // This ensures a working experience on mobile because we blur the input\n      // on touch devices when the user starts scrolling (`touchmove`).\n      // @TODO: support cases where there are multiple Autocomplete instances.\n      // Right now, a second instance makes this computation return false.\n      onTouchStart(event) {\n        // The `onTouchStart` event shouldn't trigger the `blur` handler when\n        // it's not an interaction with Autocomplete. We detect it with the\n        // following heuristics:\n        // - the panel is closed AND there are no running requests\n        //   (no interaction with the autocomplete, no future state updates)\n        // - OR the touched target is the input element (should open the panel)\n        const isNotAutocompleteInteraction =\n          store.getState().isOpen === false && !onInput.isRunning();\n\n        if (isNotAutocompleteInteraction || event.target === inputElement) {\n          return;\n        }\n\n        const isTargetWithinAutocomplete = [formElement, panelElement].some(\n          (contextNode) => {\n            return isOrContainsNode(contextNode, event.target as Node);\n          }\n        );\n\n        if (isTargetWithinAutocomplete === false) {\n          store.dispatch('blur', null);\n\n          // If requests are still running when the user closes the panel, they\n          // could reopen the panel once they resolve.\n          // We want to prevent any subsequent query from reopening the panel\n          // because it would result in an unsolicited UI behavior.\n          if (!props.debug && onInput.isRunning()) {\n            store.shouldSkipPendingUpdate = true;\n          }\n        }\n      },\n      // When scrolling on touch devices (mobiles, tablets, etc.), we want to\n      // mimic the native platform behavior where the input is blurred to\n      // hide the virtual keyboard. This gives more vertical space to\n      // discover all the suggestions showing up in the panel.\n      onTouchMove(event: TouchEvent) {\n        if (\n          store.getState().isOpen === false ||\n          inputElement !== props.environment.document.activeElement ||\n          event.target === inputElement\n        ) {\n          return;\n        }\n\n        inputElement.blur();\n      },\n      ...rest,\n    };\n  };\n\n  const getRootProps: GetRootProps = (rest) => {\n    return {\n      role: 'combobox',\n      'aria-expanded': store.getState().isOpen,\n      'aria-haspopup': 'listbox',\n      'aria-owns': store.getState().isOpen ? `${props.id}-list` : undefined,\n      'aria-labelledby': `${props.id}-label`,\n      ...rest,\n    };\n  };\n\n  const getFormProps: GetFormProps<TEvent> = (providedProps) => {\n    const { inputElement, ...rest } = providedProps;\n\n    return {\n      action: '',\n      noValidate: true,\n      role: 'search',\n      onSubmit: (event) => {\n        ((event as unknown) as Event).preventDefault();\n\n        props.onSubmit({\n          event,\n          refresh,\n          state: store.getState(),\n          ...setters,\n        });\n\n        store.dispatch('submit', null);\n        providedProps.inputElement?.blur();\n      },\n      onReset: (event) => {\n        ((event as unknown) as Event).preventDefault();\n\n        props.onReset({\n          event,\n          refresh,\n          state: store.getState(),\n          ...setters,\n        });\n\n        store.dispatch('reset', null);\n        providedProps.inputElement?.focus();\n      },\n      ...rest,\n    };\n  };\n\n  const getInputProps: GetInputProps<TEvent, TMouseEvent, TKeyboardEvent> = (\n    providedProps\n  ) => {\n    function onFocus(event: TEvent) {\n      // We want to trigger a query when `openOnFocus` is true\n      // because the panel should open with the current query.\n      if (props.openOnFocus || Boolean(store.getState().query)) {\n        onInput({\n          event,\n          props,\n          query: store.getState().completion || store.getState().query,\n          refresh,\n          store,\n          ...setters,\n        });\n      }\n\n      store.dispatch('focus', null);\n    }\n\n    const isTouchDevice = 'ontouchstart' in props.environment;\n    const { inputElement, maxLength = 512, ...rest } = providedProps || {};\n    const activeItem = getActiveItem(store.getState());\n\n    return {\n      'aria-autocomplete': 'both',\n      'aria-activedescendant':\n        store.getState().isOpen && store.getState().activeItemId !== null\n          ? `${props.id}-item-${store.getState().activeItemId}`\n          : undefined,\n      'aria-controls': store.getState().isOpen ? `${props.id}-list` : undefined,\n      'aria-labelledby': `${props.id}-label`,\n      value: store.getState().completion || store.getState().query,\n      id: `${props.id}-input`,\n      autoComplete: 'off',\n      autoCorrect: 'off',\n      autoCapitalize: 'off',\n      enterKeyHint: activeItem?.itemUrl ? 'go' : 'search',\n      spellCheck: 'false',\n      autoFocus: props.autoFocus,\n      placeholder: props.placeholder,\n      maxLength,\n      type: 'search',\n      onChange: (event) => {\n        onInput({\n          event,\n          props,\n          query: (((event as unknown) as Event)\n            .currentTarget as HTMLInputElement).value.slice(0, maxLength),\n          refresh,\n          store,\n          ...setters,\n        });\n      },\n      onKeyDown: (event) => {\n        onKeyDown({\n          event: (event as unknown) as KeyboardEvent,\n          props,\n          refresh,\n          store,\n          ...setters,\n        });\n      },\n      onFocus,\n      onBlur: () => {\n        // We do rely on the `blur` event on touch devices.\n        // See explanation in `onTouchStart`.\n        if (!isTouchDevice) {\n          store.dispatch('blur', null);\n\n          // If requests are still running when the user closes the panel, they\n          // could reopen the panel once they resolve.\n          // We want to prevent any subsequent query from reopening the panel\n          // because it would result in an unsolicited UI behavior.\n          if (!props.debug && onInput.isRunning()) {\n            store.shouldSkipPendingUpdate = true;\n          }\n        }\n      },\n      onClick: (event) => {\n        // When the panel is closed and you click on the input while\n        // the input is focused, the `onFocus` event is not triggered\n        // (default browser behavior).\n        // In an autocomplete context, it makes sense to open the panel in this\n        // case.\n        // We mimic this event by catching the `onClick` event which\n        // triggers the `onFocus` for the panel to open.\n        if (\n          providedProps.inputElement ===\n            props.environment.document.activeElement &&\n          !store.getState().isOpen\n        ) {\n          onFocus((event as unknown) as TEvent);\n        }\n      },\n      ...rest,\n    };\n  };\n\n  const getLabelProps: GetLabelProps = (rest) => {\n    return {\n      htmlFor: `${props.id}-input`,\n      id: `${props.id}-label`,\n      ...rest,\n    };\n  };\n\n  const getListProps: GetListProps = (rest) => {\n    return {\n      role: 'listbox',\n      'aria-labelledby': `${props.id}-label`,\n      id: `${props.id}-list`,\n      ...rest,\n    };\n  };\n\n  const getPanelProps: GetPanelProps<TMouseEvent> = (rest) => {\n    return {\n      onMouseDown(event) {\n        // Prevents the `activeElement` from being changed to the panel so\n        // that the blur event is not triggered, otherwise it closes the\n        // panel.\n        ((event as unknown) as MouseEvent).preventDefault();\n      },\n      onMouseLeave() {\n        store.dispatch('mouseleave', null);\n      },\n      ...rest,\n    };\n  };\n\n  const getItemProps: GetItemProps<any, TMouseEvent> = (providedProps) => {\n    const { item, source, ...rest } = providedProps;\n\n    return {\n      id: `${props.id}-item-${item.__autocomplete_id}`,\n      role: 'option',\n      'aria-selected': store.getState().activeItemId === item.__autocomplete_id,\n      onMouseMove(event) {\n        if (item.__autocomplete_id === store.getState().activeItemId) {\n          return;\n        }\n\n        store.dispatch('mousemove', item.__autocomplete_id);\n\n        const activeItem = getActiveItem(store.getState());\n\n        if (store.getState().activeItemId !== null && activeItem) {\n          const { item, itemInputValue, itemUrl, source } = activeItem;\n\n          source.onActive({\n            event,\n            item,\n            itemInputValue,\n            itemUrl,\n            refresh,\n            source,\n            state: store.getState(),\n            ...setters,\n          });\n        }\n      },\n      onMouseDown(event) {\n        // Prevents the `activeElement` from being changed to the item so it\n        // can remain with the current `activeElement`.\n        ((event as unknown) as MouseEvent).preventDefault();\n      },\n      onClick(event) {\n        const itemInputValue = source.getItemInputValue({\n          item,\n          state: store.getState(),\n        });\n        const itemUrl = source.getItemUrl({\n          item,\n          state: store.getState(),\n        });\n\n        // If `getItemUrl` is provided, it means that the suggestion\n        // is a link, not plain text that aims at updating the query.\n        // We can therefore skip the state change because it will update\n        // the `activeItemId`, resulting in a UI flash, especially\n        // noticeable on mobile.\n        const runPreCommand = itemUrl\n          ? Promise.resolve()\n          : onInput({\n              event,\n              nextState: { isOpen: false },\n              props,\n              query: itemInputValue,\n              refresh,\n              store,\n              ...setters,\n            });\n\n        runPreCommand.then(() => {\n          source.onSelect({\n            event,\n            item,\n            itemInputValue,\n            itemUrl,\n            refresh,\n            source,\n            state: store.getState(),\n            ...setters,\n          });\n        });\n      },\n      ...rest,\n    };\n  };\n\n  return {\n    getEnvironmentProps,\n    getRootProps,\n    getFormProps,\n    getLabelProps,\n    getInputProps,\n    getPanelProps,\n    getListProps,\n    getItemProps,\n  };\n}\n","import { UserAgent, userAgents } from '@algolia/autocomplete-shared';\n\nimport {\n  AutocompleteEnvironment,\n  AutocompleteOptions,\n  AutocompleteOptionsWithMetadata,\n  AutocompletePlugin,\n  BaseItem,\n} from '.';\n\ntype AutocompleteMetadata = {\n  plugins: Array<{\n    name: string | undefined;\n    options: string[];\n  }>;\n  options: Record<string, string[]>;\n  ua: UserAgent[];\n};\n\ntype GetMetadataParams<TItem extends BaseItem, TData = unknown> = {\n  plugins: Array<AutocompletePlugin<TItem, TData>>;\n  options: AutocompleteOptionsWithMetadata<TItem>;\n};\n\nexport function getMetadata<TItem extends BaseItem, TData = unknown>({\n  plugins,\n  options,\n}: GetMetadataParams<TItem, TData>) {\n  const optionsKey = ((options.__autocomplete_metadata\n    ?.userAgents as UserAgent[]) || [])[0]?.segment;\n\n  const extraOptions = optionsKey\n    ? {\n        [optionsKey]: Object.keys(\n          (options.__autocomplete_metadata\n            ?.options as AutocompleteOptions<TItem>) || {}\n        ),\n      }\n    : {};\n\n  return {\n    plugins: plugins.map((plugin) => ({\n      name: plugin.name,\n      options: Object.keys(plugin.__autocomplete_pluginOptions || []),\n    })),\n    options: {\n      'autocomplete-core': Object.keys(options),\n      ...extraOptions,\n    },\n    ua: userAgents.concat(\n      (options.__autocomplete_metadata?.userAgents as any) || []\n    ),\n  };\n}\n\ntype InlineMetadataParams = {\n  metadata: AutocompleteMetadata;\n  environment: AutocompleteEnvironment;\n};\n\nexport function injectMetadata({\n  metadata,\n  environment,\n}: InlineMetadataParams) {\n  const isMetadataEnabled = environment.navigator?.userAgent.includes(\n    'Algolia Crawler'\n  );\n\n  if (isMetadataEnabled) {\n    const metadataContainer = environment.document.createElement('meta');\n    const headRef = environment.document.querySelector('head');\n\n    metadataContainer.name = 'algolia:metadata';\n\n    setTimeout(() => {\n      metadataContainer.content = JSON.stringify(metadata);\n      headRef!.appendChild(metadataContainer);\n    }, 0);\n  }\n}\n","import { AutocompleteState, BaseItem } from './types';\nimport { getActiveItem } from './utils';\n\ninterface GetCompletionProps<TItem extends BaseItem> {\n  state: AutocompleteState<TItem>;\n}\n\nexport function getCompletion<TItem extends BaseItem>({\n  state,\n}: GetCompletionProps<TItem>): string | null {\n  if (state.isOpen === false || state.activeItemId === null) {\n    return null;\n  }\n\n  return getActiveItem(state)?.itemInputValue || null;\n}\n","import { getItemsCount, invariant } from '@algolia/autocomplete-shared';\n\nimport { getCompletion } from './getCompletion';\nimport { Reducer } from './types';\nimport { getNextActiveItemId } from './utils';\n\nexport const stateReducer: Reducer = (state, action) => {\n  switch (action.type) {\n    case 'setActiveItemId': {\n      return {\n        ...state,\n        activeItemId: action.payload,\n      };\n    }\n\n    case 'setQuery': {\n      return {\n        ...state,\n        query: action.payload,\n        completion: null,\n      };\n    }\n\n    case 'setCollections': {\n      return {\n        ...state,\n        collections: action.payload,\n      };\n    }\n\n    case 'setIsOpen': {\n      return {\n        ...state,\n        isOpen: action.payload,\n      };\n    }\n\n    case 'setStatus': {\n      return {\n        ...state,\n        status: action.payload,\n      };\n    }\n\n    case 'setContext': {\n      return {\n        ...state,\n        context: {\n          ...state.context,\n          ...action.payload,\n        },\n      };\n    }\n\n    case 'ArrowDown': {\n      const nextState = {\n        ...state,\n        activeItemId: action.payload.hasOwnProperty('nextActiveItemId')\n          ? action.payload.nextActiveItemId\n          : getNextActiveItemId(\n              1,\n              state.activeItemId,\n              getItemsCount(state),\n              action.props.defaultActiveItemId\n            ),\n      };\n\n      return {\n        ...nextState,\n        completion: getCompletion({ state: nextState }),\n      };\n    }\n\n    case 'ArrowUp': {\n      const nextState = {\n        ...state,\n        activeItemId: getNextActiveItemId(\n          -1,\n          state.activeItemId,\n          getItemsCount(state),\n          action.props.defaultActiveItemId\n        ),\n      };\n\n      return {\n        ...nextState,\n        completion: getCompletion({ state: nextState }),\n      };\n    }\n\n    case 'Escape': {\n      if (state.isOpen) {\n        return {\n          ...state,\n          activeItemId: null,\n          isOpen: false,\n          completion: null,\n        };\n      }\n\n      return {\n        ...state,\n        activeItemId: null,\n        query: '',\n        status: 'idle',\n        collections: [],\n      };\n    }\n\n    case 'submit': {\n      return {\n        ...state,\n        activeItemId: null,\n        isOpen: false,\n        status: 'idle',\n      };\n    }\n\n    case 'reset': {\n      return {\n        ...state,\n        activeItemId:\n          // Since we open the panel on reset when openOnFocus=true\n          // we need to restore the highlighted index to the defaultActiveItemId. (DocSearch use-case)\n\n          // Since we close the panel when openOnFocus=false\n          // we lose track of the highlighted index. (Query-suggestions use-case)\n          action.props.openOnFocus === true\n            ? action.props.defaultActiveItemId\n            : null,\n        status: 'idle',\n        query: '',\n      };\n    }\n\n    case 'focus': {\n      return {\n        ...state,\n        activeItemId: action.props.defaultActiveItemId,\n        isOpen:\n          (action.props.openOnFocus || Boolean(state.query)) &&\n          action.props.shouldPanelOpen({ state }),\n      };\n    }\n\n    case 'blur': {\n      if (action.props.debug) {\n        return state;\n      }\n\n      return {\n        ...state,\n        isOpen: false,\n        activeItemId: null,\n      };\n    }\n\n    case 'mousemove': {\n      return {\n        ...state,\n        activeItemId: action.payload,\n      };\n    }\n\n    case 'mouseleave': {\n      return {\n        ...state,\n        activeItemId: action.props.defaultActiveItemId,\n      };\n    }\n\n    default:\n      invariant(\n        false,\n        `The reducer action ${JSON.stringify(action.type)} is not supported.`\n      );\n\n      return state;\n  }\n};\n","import { checkOptions } from './checkOptions';\nimport { createStore } from './createStore';\nimport { getAutocompleteSetters } from './getAutocompleteSetters';\nimport { getDefaultProps } from './getDefaultProps';\nimport { getPropGetters } from './getPropGetters';\nimport { getMetadata, injectMetadata } from './metadata';\nimport { onInput } from './onInput';\nimport { stateReducer } from './stateReducer';\nimport {\n  AutocompleteApi,\n  AutocompleteOptions as AutocompleteCoreOptions,\n  BaseItem,\n  AutocompleteSubscribers,\n} from './types';\n\nexport interface AutocompleteOptionsWithMetadata<TItem extends BaseItem>\n  extends AutocompleteCoreOptions<TItem> {\n  /**\n   * @internal\n   */\n  __autocomplete_metadata?: Record<string, unknown>;\n}\n\nexport function createAutocomplete<\n  TItem extends BaseItem,\n  TEvent = Event,\n  TMouseEvent = MouseEvent,\n  TKeyboardEvent = KeyboardEvent\n>(\n  options: AutocompleteOptionsWithMetadata<TItem>\n): AutocompleteApi<TItem, TEvent, TMouseEvent, TKeyboardEvent> {\n  checkOptions(options);\n\n  const subscribers: AutocompleteSubscribers<TItem> = [];\n  const props = getDefaultProps(options, subscribers);\n  const store = createStore(stateReducer, props, onStoreStateChange);\n\n  const setters = getAutocompleteSetters({ store });\n  const propGetters = getPropGetters<\n    TItem,\n    TEvent,\n    TMouseEvent,\n    TKeyboardEvent\n  >({ props, refresh, store, ...setters });\n\n  function onStoreStateChange({ prevState, state }) {\n    props.onStateChange({ prevState, state, refresh, ...setters });\n  }\n\n  function refresh() {\n    return onInput({\n      event: new Event('input'),\n      nextState: { isOpen: store.getState().isOpen },\n      props,\n      query: store.getState().query,\n      refresh,\n      store,\n      ...setters,\n    });\n  }\n\n  props.plugins.forEach((plugin) =>\n    plugin.subscribe?.({\n      ...setters,\n      refresh,\n      onSelect(fn) {\n        subscribers.push({ onSelect: fn });\n      },\n      onActive(fn) {\n        subscribers.push({ onActive: fn });\n      },\n    })\n  );\n\n  injectMetadata({\n    metadata: getMetadata({ plugins: props.plugins, options }),\n    environment: props.environment,\n  });\n\n  return {\n    refresh,\n    ...propGetters,\n    ...setters,\n  };\n}\n"],"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","_i","Symbol","iterator","_arr","_n","_d","_s","_e","next","done","push","value","err","isArray","_typeof","obj","decycle","seen","arguments","undefined","Set","has","newSeen","add","map","x","fromEntries","entries","_ref","_ref2","key","flatten","values","reduce","a","b","concat","autocompleteId","generateAutocompleteId","getItemsCount","state","collections","sum","collection","items","invariant","condition","message","Error","noop","version","userAgents","segment","warnCache","current","warn","sanitizedMessage","trim","hasAlreadyPrinted","console","checkOptions","options","process","debug","createStore","reducer","props","onStoreStateChange","initialState","getState","dispatch","action","payload","prevState","type","shouldSkipPendingUpdate","getAutocompleteSetters","store","setActiveItemId","setQuery","setCollections","rawValue","baseItemId","item","__autocomplete_id","setIsOpen","setStatus","setContext","createConcurrentSafePromise","basePromiseId","latestResolvedId","latestResolvedValue","runningPromisesCount","runConcurrentSafePromise","promise","currentPromiseId","Promise","resolve","then","finally","isRunning","getNextActiveItemId","moveAmount","baseIndex","itemCount","defaultActiveItemId","numericIndex","getNormalizedSources","getSources","params","seenSourceIds","sources","JSON","stringify","all","filter","maybeSource","Boolean","source","sourceId","includes","normalizedSource","getItemInputValue","query","getItemUrl","onSelect","onActive","getCollectionFromActiveItemId","accumulatedCollectionsCount","acc","collectionsCount","index","previousValue","nextValue","collectionIndex","activeItemId","getRelativeActiveItemId","isOffsetFound","counter","previousItemsOffset","currentCollection","getActiveItem","itemInputValue","itemUrl","isOrContainsNode","parent","child","contains","mapToAlgoliaResponse","rawResults","results","result","hits","hit","__autocomplete_indexName","__autocomplete_queryID","queryID","facetHits","facetHit","label","count","_highlightResult","highlighted","getDefaultProps","pluginSubscribers","environment","window","plugins","openOnFocus","placeholder","autoFocus","stallThreshold","shouldPanelOpen","reshape","id","completion","isOpen","status","context","onStateChange","forEach","onSubmit","onReset","plugin","nested","navigator","navigate","location","assign","navigateNewTab","windowReference","open","focus","navigateNewWindow","sourcesBySourceId","getItems","reshapeSources","isDescription","execute","isRequesterDescription","description","preResolve","itemsOrDescription","requests","queries","transformResponse","packed","searchClient","container","find","request","maybeDescription","responses","postResolve","matches","response","transform","every","lastStalledId","onInput","event","nextState","refresh","setters","clearTimeout","setTimeout","isPanelOpen","highlightedItem","onKeyDown","triggerScrollIntoView","nodeItem","document","getElementById","scrollIntoViewIfNeeded","scrollIntoView","triggerOnActive","preventDefault","nextActiveItemId","metaKey","ctrlKey","shiftKey","altKey","getPropGetters","getEnvironmentProps","providedProps","inputElement","formElement","panelElement","rest","onTouchStart","isNotAutocompleteInteraction","target","isTargetWithinAutocomplete","some","contextNode","onTouchMove","activeElement","blur","getRootProps","role","getFormProps","noValidate","getInputProps","onFocus","isTouchDevice","maxLength","activeItem","autoComplete","autoCorrect","autoCapitalize","enterKeyHint","spellCheck","onChange","currentTarget","onBlur","onClick","getLabelProps","htmlFor","getListProps","getPanelProps","onMouseDown","onMouseLeave","getItemProps","onMouseMove","runPreCommand","getMetadata","optionsKey","__autocomplete_metadata","extraOptions","keys","__autocomplete_pluginOptions","ua","injectMetadata","metadata","isMetadataEnabled","userAgent","metadataContainer","createElement","headRef","querySelector","content","appendChild","getCompletion","stateReducer","hasOwnProperty","createAutocomplete","subscribers","propGetters","Event","subscribe","fn"],"mappings":"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"}